<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nbviewer分享Jupyter Notebook</title>
      <link href="/2019/03/22/nbviewer/"/>
      <url>/2019/03/22/nbviewer/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/b92.jpg"></p><p>Jupyter是将代码与写作结合的神器。如果只是自己跟自己玩，随便用个编程软件就欧了。但是既然都用上Jupyter了，说明要分享，记录一下怎么用github+nbviewer分享。</p><a id="more"></a><h4 id="1-创建一个新的respository"><a href="#1-创建一个新的respository" class="headerlink" title="1. 创建一个新的respository"></a>1. 创建一个新的respository</h4><p>比如取名为test，然后在本地比如说D盘打开git bash，clone这个respository到本地，输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/user/test.git</span><br></pre></td></tr></table></figure><br>user就是你用户名咯 (我这里是wangwanglulu)<br><img src="/images/nb/nb1.png" alt=""></p><h4 id="2-上传你的-ipynb文件到你刚才创建的respository"><a href="#2-上传你的-ipynb文件到你刚才创建的respository" class="headerlink" title="2. 上传你的.ipynb文件到你刚才创建的respository"></a>2. 上传你的.ipynb文件到你刚才创建的respository</h4><p>上传就是基本的git操作了<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br><span class="line"><span class="bash">git commit -m <span class="string">"first"</span></span></span><br><span class="line"><span class="bash">git push origin master</span></span><br></pre></td></tr></table></figure></p><h4 id="3-复制链接"><a href="#3-复制链接" class="headerlink" title="3. 复制链接"></a>3. 复制链接</h4><p>在网页登陆GitHub，打开你刚才创建的respository里的.ipynb文件，复制浏览器里显示的网址。 比如说我的是<br><img src="/images/nb/nb2.png" alt=""><br>粘贴到<a href="https://nbviewer.jupyter.org/" target="_blank" rel="noopener">nbviewer</a><br><img src="/images/nb/nb3.png" alt=""><br>回车就能看到生成的分享网页了。如果你要分享的话，就把这个网页的地址粘出去就OK了！</p><h4 id="4-网上编辑"><a href="#4-网上编辑" class="headerlink" title="4. 网上编辑"></a>4. 网上编辑</h4><p>如果你点击 Execute on Binder就能直接在网上运行Jupyter Notebook了，很神奇但是要耐心等一下。<br><img src="/images/nb/nb4.png" alt=""></p><p>最后，其实也有别的方法分享，比如生成html文件，然后上传到github，或者直接上传Python代码文件。但是偶觉得上面这个方法是值得推荐的。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Github Pages部署Html5幻灯片</title>
      <link href="/2017/09/20/reveal/"/>
      <url>/2017/09/20/reveal/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/b112.jpg"></p><p>上课需要一种幻灯片，可以方便的展示代码，可以编辑数学公式，可以用markdown编辑，可以在网页上方便的浏览，也可以线下浏览。这里介绍一个“黑科技”，将幻灯片部署在我的个人主页上。</p><a id="more"></a><h3 id="Reveal-js"><a href="#Reveal-js" class="headerlink" title="Reveal.js"></a>Reveal.js</h3><p>Reveal.js绝对是幻灯片界的黑科技，可以看看它的<a href="http://lab.hakim.se/reveal-js/#/" target="_blank" rel="noopener">Demo</a>，还有它的<a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="noopener">介绍文档</a>，感觉实在有点炫酷。</p><p>这里仅介绍怎么将幻灯片部署到我的个人主页上，具体怎么做幻灯片，参考一下介绍文档就可以了。</p><h3 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h3><h4 id="1-创建一个新的respository"><a href="#1-创建一个新的respository" class="headerlink" title="1. 创建一个新的respository"></a>1. 创建一个新的respository</h4><p>比如取名为test，然后在本地比如说D盘打开git bash，clone这个respository到本地，输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/user/test.git</span><br></pre></td></tr></table></figure><br>user就是你用户名咯。</p><h4 id="2-创建gh-pages-branch"><a href="#2-创建gh-pages-branch" class="headerlink" title="2. 创建gh-pages branch"></a>2. 创建gh-pages branch</h4><p>在你刚才创建的文件夹D:/test打开git bash，输入<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="comment">--orphan gh-pages</span></span><br></pre></td></tr></table></figure><br>这样你的gh-pages分支就创建好了。</p><h4 id="3-上传reveal-js到branch"><a href="#3-上传reveal-js到branch" class="headerlink" title="3. 上传reveal.js到branch"></a>3. 上传reveal.js到branch</h4><p>从<a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="noopener">reveal.js</a>把文件下载下来，编辑index.html文件（这个就是你的幻灯片），然后全部拷贝到刚才的test文件夹，输入<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br><span class="line"><span class="bash">git commit -m <span class="string">"1st commit"</span></span></span><br><span class="line"><span class="bash">git push origin gh-pages</span></span><br></pre></td></tr></table></figure><br>输入你账户的用户名和密码就搞定了！接下来试着访问一下 user.github.io/test，就可以访问幻灯片了。也可以下载下来，直接查看index.html，或者生成PDF文件。</p><p>至于具体怎么修改幻灯片，可以好好研究一下。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简约GTD管理备忘</title>
      <link href="/2017/09/20/gtd/"/>
      <url>/2017/09/20/gtd/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/b24.jpg"></p><p>由于你懂的原因，中国大陆限制有点多，这里记录一个极简约的GTD方法，适用Win系统，Mac应该有更方便的办法。</p><a id="more"></a><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>和很多GTD中毒用户不一样，我的需求很简单：</p><ul><li>最方便快捷的邮箱，并且后缀不山寨，不复杂，不被当成spam。</li><li>日程管理方便设定，并且能在电脑手机多平台光速同步。</li><li>Todo list随时添加，随时修改，多平台同步。</li><li>稳定稳定稳定，不是那种昙花一现的软件，后面有“百年老店”维护。</li><li>全世界都可以使用。</li></ul><h3 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h3><h4 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h4><p>其实Gmail是最好的，但是避免出现状况，我选择了outlook，所以后缀就是outlook。这样可以与电脑版的outlook完美兼容，设置最简单。其他的邮箱我觉得都有各种各样的问题。</p><h4 id="日程管理和Todo-list"><a href="#日程管理和Todo-list" class="headerlink" title="日程管理和Todo list"></a>日程管理和Todo list</h4><p>就直接选择了outlook的日程管理，在电脑上添加是最方便的。</p><p>我用的是苹果手机，可以使用ios版的outlook，这样日历就光速同步到手机，并且易于修改。同时可以在苹果原生的邮箱软件里添加outlook账户，可以去掉邮箱这一项（因为这个邮箱实在没有outlook软件好用），添加calendar和reminder就足够了。</p><p>这样一来，邮件统一由outlook软件查看，日程同步到苹果原生的日历上。Todo list同步到苹果原生的reminder上。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>这套方法简单来说，就是</p><ul><li>outlook邮箱+日程管理+待办事项</li></ul><p>应该是最方便也最实用的。</p><p>当然有更复杂也更精细的GTD管理，那就需要花一些功夫折腾了。用多了outlook，我保证你会上瘾的。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
